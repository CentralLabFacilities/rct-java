// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrameTransform.proto

package rct.proto;

import static com.google.protobuf.ByteString.copyFromUtf8;
import static com.google.protobuf.CodedOutputStream.computeBytesSize;
import static com.google.protobuf.CodedOutputStream.computeMessageSize;
import static com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom;
import static rct.proto.FrameTransformType.FrameTransform.Builder.create;
import static rct.proto.FrameTransformType.internal_static_rct_FrameTransform_descriptor;
import static rst.geometry.PoseType.Pose.PARSER;
import static rst.timing.TimestampType.Timestamp.PARSER;

public final class FrameTransformType {
  private FrameTransformType() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface FrameTransformOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .rst.geometry.Pose transform = 1;
    /**
     * <code>optional .rst.geometry.Pose transform = 1;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    boolean hasTransform();
    /**
     * <code>optional .rst.geometry.Pose transform = 1;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    rst.geometry.PoseType.Pose getTransform();
    /**
     * <code>optional .rst.geometry.Pose transform = 1;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    rst.geometry.PoseType.PoseOrBuilder getTransformOrBuilder();

    // required string frame_parent = 2;
    /**
     * <code>required string frame_parent = 2;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    boolean hasFrameParent();
    /**
     * <code>required string frame_parent = 2;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    java.lang.String getFrameParent();
    /**
     * <code>required string frame_parent = 2;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    com.google.protobuf.ByteString
        getFrameParentBytes();

    // required string frame_child = 3;
    /**
     * <code>required string frame_child = 3;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    boolean hasFrameChild();
    /**
     * <code>required string frame_child = 3;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    java.lang.String getFrameChild();
    /**
     * <code>required string frame_child = 3;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    com.google.protobuf.ByteString
        getFrameChildBytes();

    // optional .rst.timing.Timestamp time = 4;
    /**
     * <code>optional .rst.timing.Timestamp time = 4;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    boolean hasTime();
    /**
     * <code>optional .rst.timing.Timestamp time = 4;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    rst.timing.TimestampType.Timestamp getTime();
    /**
     * <code>optional .rst.timing.Timestamp time = 4;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    rst.timing.TimestampType.TimestampOrBuilder getTimeOrBuilder();
  }
  /**
   * Protobuf type {@code rct.FrameTransform}
   *
   * <pre>
   **
   * This is a container for rct internal use.
   *
   *
   * @author Leon Ziegler &lt;lziegler@techfak.uni-bielefeld.de&gt;
   * </pre>
   */
  public static final class FrameTransform extends
      com.google.protobuf.GeneratedMessage
      implements FrameTransformOrBuilder {
    // Use FrameTransform.newBuilder() to construct.
    private FrameTransform(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FrameTransform(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FrameTransform defaultInstance;
    public static FrameTransform getDefaultInstance() {
      return defaultInstance;
    }

    public FrameTransform getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FrameTransform(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              rst.geometry.PoseType.Pose.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = transform_.toBuilder();
              }
              transform_ = input.readMessage(PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(transform_);
                transform_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              frameParent_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              frameChild_ = input.readBytes();
              break;
            }
            case 34: {
              rst.timing.TimestampType.Timestamp.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = time_.toBuilder();
              }
              time_ = input.readMessage(PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(time_);
                time_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return internal_static_rct_FrameTransform_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return internal_static_rct_FrameTransform_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              rct.proto.FrameTransformType.FrameTransform.class, rct.proto.FrameTransformType.FrameTransform.Builder.class);
    }

    public static com.google.protobuf.Parser<FrameTransform> PARSER =
        new com.google.protobuf.AbstractParser<FrameTransform>() {
      public FrameTransform parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FrameTransform(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FrameTransform> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .rst.geometry.Pose transform = 1;
    public static final int TRANSFORM_FIELD_NUMBER = 1;
    private rst.geometry.PoseType.Pose transform_;
    /**
     * <code>optional .rst.geometry.Pose transform = 1;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    public boolean hasTransform() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .rst.geometry.Pose transform = 1;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    public rst.geometry.PoseType.Pose getTransform() {
      return transform_;
    }
    /**
     * <code>optional .rst.geometry.Pose transform = 1;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    public rst.geometry.PoseType.PoseOrBuilder getTransformOrBuilder() {
      return transform_;
    }

    // required string frame_parent = 2;
    public static final int FRAME_PARENT_FIELD_NUMBER = 2;
    private java.lang.Object frameParent_;
    /**
     * <code>required string frame_parent = 2;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    public boolean hasFrameParent() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string frame_parent = 2;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    public java.lang.String getFrameParent() {
      java.lang.Object ref = frameParent_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          frameParent_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string frame_parent = 2;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFrameParentBytes() {
      java.lang.Object ref = frameParent_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
                copyFromUtf8(
                (java.lang.String) ref);
        frameParent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string frame_child = 3;
    public static final int FRAME_CHILD_FIELD_NUMBER = 3;
    private java.lang.Object frameChild_;
    /**
     * <code>required string frame_child = 3;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    public boolean hasFrameChild() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string frame_child = 3;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    public java.lang.String getFrameChild() {
      java.lang.Object ref = frameChild_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          frameChild_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string frame_child = 3;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFrameChildBytes() {
      java.lang.Object ref = frameChild_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
                copyFromUtf8(
                (java.lang.String) ref);
        frameChild_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .rst.timing.Timestamp time = 4;
    public static final int TIME_FIELD_NUMBER = 4;
    private rst.timing.TimestampType.Timestamp time_;
    /**
     * <code>optional .rst.timing.Timestamp time = 4;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .rst.timing.Timestamp time = 4;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    public rst.timing.TimestampType.Timestamp getTime() {
      return time_;
    }
    /**
     * <code>optional .rst.timing.Timestamp time = 4;</code>
     *
     * <pre>
     **
     * 
     * </pre>
     */
    public rst.timing.TimestampType.TimestampOrBuilder getTimeOrBuilder() {
      return time_;
    }

    private void initFields() {
      transform_ = rst.geometry.PoseType.Pose.getDefaultInstance();
      frameParent_ = "";
      frameChild_ = "";
      time_ = rst.timing.TimestampType.Timestamp.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasFrameParent()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFrameChild()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTransform()) {
        if (!getTransform().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTime()) {
        if (!getTime().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, transform_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFrameParentBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getFrameChildBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, time_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += computeMessageSize(1, transform_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += computeBytesSize(2, getFrameParentBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += computeBytesSize(3, getFrameChildBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += computeMessageSize(4, time_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static rct.proto.FrameTransformType.FrameTransform parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rct.proto.FrameTransformType.FrameTransform parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rct.proto.FrameTransformType.FrameTransform parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static rct.proto.FrameTransformType.FrameTransform parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static rct.proto.FrameTransformType.FrameTransform parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static rct.proto.FrameTransformType.FrameTransform parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static rct.proto.FrameTransformType.FrameTransform parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static rct.proto.FrameTransformType.FrameTransform parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static rct.proto.FrameTransformType.FrameTransform parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static rct.proto.FrameTransformType.FrameTransform parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(rct.proto.FrameTransformType.FrameTransform prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code rct.FrameTransform}
     *
     * <pre>
     **
     * This is a container for rct internal use.
     *
     *
     * @author Leon Ziegler &lt;lziegler@techfak.uni-bielefeld.de&gt;
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements rct.proto.FrameTransformType.FrameTransformOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return  internal_static_rct_FrameTransform_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return  internal_static_rct_FrameTransform_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                rct.proto.FrameTransformType.FrameTransform.class, rct.proto.FrameTransformType.FrameTransform.Builder.class);
      }

      // Construct using rct.proto.FrameTransformType.FrameTransform.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (    alwaysUseFieldBuilders) {
          getTransformFieldBuilder();
          getTimeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (transformBuilder_ == null) {
          transform_ = rst.geometry.PoseType.Pose.getDefaultInstance();
        } else {
          transformBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        frameParent_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        frameChild_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        if (timeBuilder_ == null) {
          time_ = rst.timing.TimestampType.Timestamp.getDefaultInstance();
        } else {
          timeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return  internal_static_rct_FrameTransform_descriptor;
      }

      public rct.proto.FrameTransformType.FrameTransform getDefaultInstanceForType() {
        return  getDefaultInstance();
      }

      public rct.proto.FrameTransformType.FrameTransform build() {
        rct.proto.FrameTransformType.FrameTransform result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public rct.proto.FrameTransformType.FrameTransform buildPartial() {
        rct.proto.FrameTransformType.FrameTransform result = new rct.proto.FrameTransformType.FrameTransform(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (transformBuilder_ == null) {
          result.transform_ = transform_;
        } else {
          result.transform_ = transformBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.frameParent_ = frameParent_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.frameChild_ = frameChild_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (timeBuilder_ == null) {
          result.time_ = time_;
        } else {
          result.time_ = timeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rct.proto.FrameTransformType.FrameTransform) {
          return mergeFrom((rct.proto.FrameTransformType.FrameTransform)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(rct.proto.FrameTransformType.FrameTransform other) {
        if (other == getDefaultInstance()) return this;
        if (other.hasTransform()) {
          mergeTransform(other.getTransform());
        }
        if (other.hasFrameParent()) {
          bitField0_ |= 0x00000002;
          frameParent_ = other.frameParent_;
          onChanged();
        }
        if (other.hasFrameChild()) {
          bitField0_ |= 0x00000004;
          frameChild_ = other.frameChild_;
          onChanged();
        }
        if (other.hasTime()) {
          mergeTime(other.getTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFrameParent()) {
          
          return false;
        }
        if (!hasFrameChild()) {
          
          return false;
        }
        if (hasTransform()) {
          if (!getTransform().isInitialized()) {
            
            return false;
          }
        }
        if (hasTime()) {
          if (!getTime().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        rct.proto.FrameTransformType.FrameTransform parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (rct.proto.FrameTransformType.FrameTransform) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .rst.geometry.Pose transform = 1;
      private rst.geometry.PoseType.Pose transform_ = rst.geometry.PoseType.Pose.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          rst.geometry.PoseType.Pose, rst.geometry.PoseType.Pose.Builder, rst.geometry.PoseType.PoseOrBuilder> transformBuilder_;
      /**
       * <code>optional .rst.geometry.Pose transform = 1;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public boolean hasTransform() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .rst.geometry.Pose transform = 1;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public rst.geometry.PoseType.Pose getTransform() {
        if (transformBuilder_ == null) {
          return transform_;
        } else {
          return transformBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .rst.geometry.Pose transform = 1;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public Builder setTransform(rst.geometry.PoseType.Pose value) {
        if (transformBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          transform_ = value;
          onChanged();
        } else {
          transformBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .rst.geometry.Pose transform = 1;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public Builder setTransform(
          rst.geometry.PoseType.Pose.Builder builderForValue) {
        if (transformBuilder_ == null) {
          transform_ = builderForValue.build();
          onChanged();
        } else {
          transformBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .rst.geometry.Pose transform = 1;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public Builder mergeTransform(rst.geometry.PoseType.Pose value) {
        if (transformBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              transform_ != rst.geometry.PoseType.Pose.getDefaultInstance()) {
            transform_ =
              rst.geometry.PoseType.Pose.newBuilder(transform_).mergeFrom(value).buildPartial();
          } else {
            transform_ = value;
          }
          onChanged();
        } else {
          transformBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .rst.geometry.Pose transform = 1;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public Builder clearTransform() {
        if (transformBuilder_ == null) {
          transform_ = rst.geometry.PoseType.Pose.getDefaultInstance();
          onChanged();
        } else {
          transformBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .rst.geometry.Pose transform = 1;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public rst.geometry.PoseType.Pose.Builder getTransformBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTransformFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .rst.geometry.Pose transform = 1;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public rst.geometry.PoseType.PoseOrBuilder getTransformOrBuilder() {
        if (transformBuilder_ != null) {
          return transformBuilder_.getMessageOrBuilder();
        } else {
          return transform_;
        }
      }
      /**
       * <code>optional .rst.geometry.Pose transform = 1;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          rst.geometry.PoseType.Pose, rst.geometry.PoseType.Pose.Builder, rst.geometry.PoseType.PoseOrBuilder> 
          getTransformFieldBuilder() {
        if (transformBuilder_ == null) {
          transformBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              >(
                  transform_,
                  getParentForChildren(),
                  isClean());
          transform_ = null;
        }
        return transformBuilder_;
      }

      // required string frame_parent = 2;
      private java.lang.Object frameParent_ = "";
      /**
       * <code>required string frame_parent = 2;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public boolean hasFrameParent() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string frame_parent = 2;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public java.lang.String getFrameParent() {
        java.lang.Object ref = frameParent_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          frameParent_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string frame_parent = 2;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFrameParentBytes() {
        java.lang.Object ref = frameParent_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
                    copyFromUtf8(
                  (java.lang.String) ref);
          frameParent_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string frame_parent = 2;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public Builder setFrameParent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        frameParent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string frame_parent = 2;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public Builder clearFrameParent() {
        bitField0_ = (bitField0_ & ~0x00000002);
        frameParent_ = getDefaultInstance().getFrameParent();
        onChanged();
        return this;
      }
      /**
       * <code>required string frame_parent = 2;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public Builder setFrameParentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        frameParent_ = value;
        onChanged();
        return this;
      }

      // required string frame_child = 3;
      private java.lang.Object frameChild_ = "";
      /**
       * <code>required string frame_child = 3;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public boolean hasFrameChild() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string frame_child = 3;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public java.lang.String getFrameChild() {
        java.lang.Object ref = frameChild_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          frameChild_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string frame_child = 3;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFrameChildBytes() {
        java.lang.Object ref = frameChild_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
                    copyFromUtf8(
                  (java.lang.String) ref);
          frameChild_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string frame_child = 3;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public Builder setFrameChild(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        frameChild_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string frame_child = 3;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public Builder clearFrameChild() {
        bitField0_ = (bitField0_ & ~0x00000004);
        frameChild_ = getDefaultInstance().getFrameChild();
        onChanged();
        return this;
      }
      /**
       * <code>required string frame_child = 3;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public Builder setFrameChildBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        frameChild_ = value;
        onChanged();
        return this;
      }

      // optional .rst.timing.Timestamp time = 4;
      private rst.timing.TimestampType.Timestamp time_ = rst.timing.TimestampType.Timestamp.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          rst.timing.TimestampType.Timestamp, rst.timing.TimestampType.Timestamp.Builder, rst.timing.TimestampType.TimestampOrBuilder> timeBuilder_;
      /**
       * <code>optional .rst.timing.Timestamp time = 4;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .rst.timing.Timestamp time = 4;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public rst.timing.TimestampType.Timestamp getTime() {
        if (timeBuilder_ == null) {
          return time_;
        } else {
          return timeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .rst.timing.Timestamp time = 4;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public Builder setTime(rst.timing.TimestampType.Timestamp value) {
        if (timeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          time_ = value;
          onChanged();
        } else {
          timeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .rst.timing.Timestamp time = 4;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public Builder setTime(
          rst.timing.TimestampType.Timestamp.Builder builderForValue) {
        if (timeBuilder_ == null) {
          time_ = builderForValue.build();
          onChanged();
        } else {
          timeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .rst.timing.Timestamp time = 4;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public Builder mergeTime(rst.timing.TimestampType.Timestamp value) {
        if (timeBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              time_ != rst.timing.TimestampType.Timestamp.getDefaultInstance()) {
            time_ =
              rst.timing.TimestampType.Timestamp.newBuilder(time_).mergeFrom(value).buildPartial();
          } else {
            time_ = value;
          }
          onChanged();
        } else {
          timeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .rst.timing.Timestamp time = 4;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public Builder clearTime() {
        if (timeBuilder_ == null) {
          time_ = rst.timing.TimestampType.Timestamp.getDefaultInstance();
          onChanged();
        } else {
          timeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .rst.timing.Timestamp time = 4;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public rst.timing.TimestampType.Timestamp.Builder getTimeBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTimeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .rst.timing.Timestamp time = 4;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      public rst.timing.TimestampType.TimestampOrBuilder getTimeOrBuilder() {
        if (timeBuilder_ != null) {
          return timeBuilder_.getMessageOrBuilder();
        } else {
          return time_;
        }
      }
      /**
       * <code>optional .rst.timing.Timestamp time = 4;</code>
       *
       * <pre>
       **
       * 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          rst.timing.TimestampType.Timestamp, rst.timing.TimestampType.Timestamp.Builder, rst.timing.TimestampType.TimestampOrBuilder> 
          getTimeFieldBuilder() {
        if (timeBuilder_ == null) {
          timeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              >(
                  time_,
                  getParentForChildren(),
                  isClean());
          time_ = null;
        }
        return timeBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:rct.FrameTransform)
    }

    static {
      defaultInstance = new FrameTransform(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:rct.FrameTransform)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rct_FrameTransform_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rct_FrameTransform_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024FrameTransform.proto\022\003rct\032\027rst/geometr" +
      "y/Pose.proto\032\032rst/timing/Timestamp.proto" +
      "\"\207\001\n\016FrameTransform\022%\n\ttransform\030\001 \001(\0132\022" +
      ".rst.geometry.Pose\022\024\n\014frame_parent\030\002 \002(\t" +
      "\022\023\n\013frame_child\030\003 \002(\t\022#\n\004time\030\004 \001(\0132\025.rs" +
      "t.timing.TimestampB\037\n\trct.protoB\022FrameTr" +
      "ansformType"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_rct_FrameTransform_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_rct_FrameTransform_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rct_FrameTransform_descriptor,
              new java.lang.String[] { "Transform", "FrameParent", "FrameChild", "Time", });
          return null;
        }
      };
        internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          rst.geometry.PoseType.getDescriptor(),
          rst.timing.TimestampType.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
